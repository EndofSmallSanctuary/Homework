- hosts: homegroup
  become: yes
  gather_facts: yes

  vars:
    file_id: 111DjmJnZD94wqLpjznKTNdqDSE_hXZEk
  tasks: 

  # - name: Set authorized key taken from file
  #   authorized_key:
  #     user: "{{ansible_user}}"
  #     state: present
  #     manage_dir: yes
  #     key: "{{lookup('file','jay.pub')}}"
  
  # - name: generate service file from template 
  #   template:
  #     src: test_service.j2
  #     dest: /etc/systemd/system/test.service  

  # - name: prepare service 
  #   systemd: 
  #     name: test
  #     daemon-reload: yes
  #     enabled: yes


  # - replace:
  #     path: '/etc/ssh/sshd_config'
  #     after: 'PasswordAuthentication'
  #     regexp: '^(.*)PasswordAuthentication(.*)$'
  #     replace: ''

  # - name: Disable root SSH login
  #   lineinfile:
  #     dest: /etc/ssh/sshd_config
  #     regexp: "^PermitRootLogin"
  #     line: "PermitRootLogin no"
  #     state: present    

  # - lineinfile:
  #     path: '/etc/ssh/sshd_config'
  #     regexp: '^(.*)PasswordAuthentication(.*)$'
  #     line: 'PasswordAuthentication no'   

  # - lineinfile:
  #     path: '/etc/ssh/sshd_config'
  #     regexp: '^(.*)PasswordAuthentication(.*)$'
  #     line: 'PasswordAuthentication no'             

  # - name: restarting service
  #   service:
  #     name: sshd
  #     state: restarted

    - name: create directory with parent directories
      file:
       path: "{{project_path}}/test"
       state: directory


    - name: Download archive from google drive
      get_url:
        url: "https://drive.google.com/uc?export=download&id={{ file_id }}"
        dest: "{{project_path}}/test/Flask.zip"
        force: yes
        mode: u=r,g-r,o=r

    
    - name: Unarchive a file that is already on the remote machine
      ansible.builtin.unarchive:
        src: "{{project_path}}/test/Flask.zip"
        dest: "{{project_path}}/test"
        remote_src: yes

    - name: remove trash
      file:
       path: "{{project_path}}/test/Flask.zip"
       state: absent    







